---
import Chart from "@components/Chart.astro"
---

<script is:inline src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
  let area = document.getElementById("textArea");
  if (area.addEventListener) {
    area.addEventListener("input", updateText, false);
  } else if (area.attachEvent) {
    area.attachEvent("onpropertychange", updateText);
  }

  function countWords(text) {
    return text.match(/(\w+)/g).length;
  }

  function updateWordChart(text) {
    let chars = text.split(" ");
    let wordFreq: { [word: string]: number } = {};
    for (let i = 0; i < chars.length; i++) {
      if (!(chars[i] in wordFreq)) {
        wordFreq[chars[i]] = 1;
      } else {
        wordFreq[chars[i]] += 1;
      }
    }

    wordChart.data.labels = Object.keys(wordFreq);
    wordChart.data.datasets[0].data = Object.values(wordFreq);
    wordChart.update();
  }

  function charFreqCounter(text) {
    let charFreq: { [word: string]: number } = {};
    for (let i = 0; i < text.length; i++) {
      let char = text[i] == " " ? "space" : text[i];
      if (!(char in charFreq)) {
        charFreq[char] = 1;
      } else {
        charFreq[char] += 1;
      }
    }
    return charFreq;
  }

  function sortFreqObj(obj) {
    let sorted = [];
    for (let char in obj) {
      sorted.push([char, obj[char]]);
    }
    sorted.sort((a, b) => {
      if (a[0] < b[0] || b[0] == 'space') {  // Move space to last place
        return -1;
      } else if (a[0] > b[0]) {
        return 1;
      } else {
        return 0;
      }
    });

    return sorted;
  }

  function unzipList(list) {
    let a = [];
    let b = [];
    for (let i = 0; i < list.length; i++) {
      a.push(list[i][0]);
      b.push(list[i][1]);
    }

    return [a, b]
  }

  function updateCharChart(text) {
    let charFreq = charFreqCounter(text);
    let sorted = sortFreqObj(charFreq);
    let [chars, freq] = unzipList(sorted);

    charChart.data.labels = chars;
    charChart.data.datasets[0].data = freq;
    charChart.update();
  }

  function updateText(e) {
    let text = document.getElementById("textArea").value;
    let wordCount = countWords(text);
    let charCount = text.length;

    document.getElementById(
      "wordDisplay"
    ).innerHTML = `Words: ${wordCount}`;
    document.getElementById(
      "charDisplay"
    ).innerHTML = `Char: ${charCount}`;

    updateWordChart(text);
    updateCharChart(text);
  }

  const wordChartCtx = document.getElementById("wordChart");
  let wordChart = new Chart(wordChartCtx, {
    type: "bar",
    data: {
      labels: [],
      datasets: [
        {
          label: "Words",
          data: [],
          borderWidth: 1,
        },
      ],
    },
    options: {
      scales: {
        y: {
          beginAtZero: true,
        },
      },
    },
  });

  const charChartCtx = document.getElementById("charChart");
  let charChart = new Chart(charChartCtx, {
    type: "bar",
    data: {
      labels: [],
      datasets: [
        {
          label: "Characters",
          data: [],
          borderWidth: 1,
        },
      ],
    },
    options: {
      scales: {
        y: {
          beginAtZero: true,
        },
      },
    },
  });
</script>

<main>
  <div class="page-container ml-60 mr-60">
    <div class="mt-10 mb-5 ml-2">
      <div id="wordDisplay" class="text-lg font-bold">Words: 0</div>
      <div id="charDisplay" class="text-lg font-bold">Characters: 0</div>
    </div>
    <div class="grid place-items-center">
      <textarea
        rows="20"
        id="textArea"
        class="w-full pl-2 pr-2 border-solid border-2 border-sky-500 rounded"
      ></textarea>
    </div>
  </div>
  <canvas id="wordChart" class="m-10"></canvas>
  <canvas id="charChart" class="m-10"></canvas>
</main>

<style>
  @media only screen and (max-width: 1200px) {
    .page-container {
      margin: 0 5%;
    }
  }
</style>
